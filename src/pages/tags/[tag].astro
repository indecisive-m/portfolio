---
import { getCollection, type CollectionEntry } from "astro:content";
import Card from "../../components/Card.astro";
import Layout from "../../layouts/Layout.astro";
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";

type PostType = {
  slug: string;
  data: {
    title: string;
    description: string;
    publishDate: Date;
    tags: Array<string>;
  };
};

export const getStaticPaths = async () => {
  const allPosts = await getCollection("blog");

  const uniqueTags = [
    ...new Set(
      allPosts.map((post: CollectionEntry<"blog">) => post.data.tags).flat(),
    ),
  ];

  return uniqueTags.map((value: unknown) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(value as string),
    );

    const tag = value as string;

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
};

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
---

<Layout title={tag}>
  <p>Posts tagged with {tag}</p>
  <ul class="blog-list">
    {
      posts.map((post: PostType) => (
        <Card
          href={`/blog/${post.slug}`}
          title={post.data.title}
          tags={[tag]}
          description={post.data.description}
          publishDate={post.data.publishDate}
        />
      ))
    }
  </ul>
</Layout>
