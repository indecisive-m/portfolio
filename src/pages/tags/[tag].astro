---
import { getCollection } from "astro:content";
import Card from "../../components/Card.astro";
import Layout from "../../layouts/Layout.astro";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
  MarkdownInstance,
} from "astro";

export const getStaticPaths = (async () => {
  const allPosts = await getCollection("blog");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag),
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props;
---

<Layout title={tag} isMarkdown={false}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <Card
          href={`/blog/${post.slug}`}
          title={post.data.title}
          tags={[tag]}
          description={post.data.description}
        />
      ))
    }
  </ul>
</Layout>
<style>
  ul {
    display: grid;
    margin: 0;
    padding: 0;
    grid-template-columns: repeat(2, calc(40ch - 1.5rem));
    gap: 1rem;
  }
</style>
