---
import "../styles/global.css";
import ThemeIcon from "./ThemeIcon.astro";

const { currentPage } = Astro.props;
---

<header>
  <button
    aria-controls="primary-nav"
    aria-expanded="false"
    id="menu-button"
    transition:persist
  >
    <span class="visually-hidden">Menu</span>

    <svg
      class="icon-hamburger"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="4.5 7.5 15 9"
    >
      <path
        d="M5 8H13.75M5 12H19M10.25 16L19 16"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>

    <svg
      viewBox="0 0 24.00 24.00"
      class="icon-close"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="SVGRepo_bgCarrier" stroke-width="0">
        <rect x="0" y="0" width="24.00" height="24.00" rx="0" fill="none"
        ></rect>
      </g>
      <g
        id="SVGRepo_tracerCarrier"
        stroke-linecap="round"
        stroke-linejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        <g id="Menu / Close_SM">
          <path
            id="Vector"
            d="M16 16L12 12M12 12L8 8M12 12L16 8M12 12L8 16"
            stroke="#000000"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </g>
      </g>
    </svg>
  </button>

  <nav id="primary-nav">
    <a href="/" class:list={{ current: currentPage === "Home" }}> Home </a>
    <a href="/about/" class:list={{ current: currentPage === "About Me" }}>
      About
    </a>
    <a href="/blog/" class:list={{ current: currentPage === "Blog" }}> Blog </a>
    {
      /* <a href="/tags/" class:list={{ current: currentPage === "Tag Index" }}>
          Tags
        </a> */
    }
  </nav>
  <ThemeIcon />
</header>

<style>
  header {
    display: flex;
    height: 3rem;
    justify-content: space-between;
    align-items: center;
  }

  a {
    padding-inline-end: 1rem;
    position: relative;
  }

  .current {
    position: relative;
    color: var(--heading-color);
    text-decoration: double;

    &::before {
      position: absolute;
      top: 0;
      left: -1rem;
      content: "\229B";
      color: var(--heading-color);
    }
  }

  button {
    background-color: transparent;
    border: none;
    display: none;
    height: 3rem;
    width: 3rem;

    svg {
      --size: 2rem;
      height: var(--size);
      width: var(--size);
      fill: var(--font-color);
    }

    path {
      stroke: var(--font-color);
    }
  }

  @media (width < 750px) {
    nav {
      display: none;
    }

    .blog-nav {
      display: block;
    }

    button {
      display: flex;
      cursor: pointer;
      justify-content: center;
      align-items: center;
    }

    .icon-close {
      display: none;
    }

    [aria-expanded="true"] {
      .icon-close {
        display: block;
        z-index: 10;
      }

      .icon-hamburger {
        display: none;
      }
    }

    [aria-expanded="true"] + nav {
      display: flex;
      flex-direction: column;
      position: absolute;
      padding-block: 6rem;
      padding-inline: 3rem;
      top: 0;
      left: 0;
      bottom: 0;
      background-color: var(--bg-color);
      width: 80%;
      gap: 2rem;
      z-index: 9;
      box-shadow: 0 0 0 100vmax hsl(from var(--bg-color) h s l / 0.6);

      .icon-close {
        z-index: 10;
      }
    }
  }
</style>

<script>
  const navToggle = document.querySelector("#menu-button");

  navToggle?.addEventListener("click", () => {
    console.log("click");
    const currentToggleState = navToggle.getAttribute("aria-expanded");

    console.log(currentToggleState);

    if (currentToggleState === "false") {
      navToggle.setAttribute("aria-expanded", "true");
    } else {
      navToggle.setAttribute("aria-expanded", "false");
    }
  });

  document.addEventListener("astro:page-load", () => {
    const currentToggleState = navToggle?.getAttribute("aria-expanded");

    if (currentToggleState === "true") {
      navToggle?.setAttribute("aria-expanded", "false");
    }
  });
</script>
